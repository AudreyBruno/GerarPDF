unit uPermissions;

interface

uses Androidapi.JNI.GraphicsContentViewText, Androidapi.JNI.JavaTypes, Androidapi.Helpers, System.Permissions,
     Androidapi.JNI.Os, FMX.Dialogs, Androidapi.JNI.Provider, Androidapi.JNI;

type
  TPermissionGrantedProc = reference to procedure;

procedure RequestPermissions(const APermissionGrantedProc: TPermissionGrantedProc; const AMessage: string);

var
  FPermissionRequested: Boolean = False;

implementation

procedure RequestPermissions(const APermissionGrantedProc: TPermissionGrantedProc; const AMessage: string);
begin
  if not PermissionsService.IsPermissionGranted(JStringToString(TJManifest_permission.JavaClass.READ_EXTERNAL_STORAGE)) then
  begin
    if not FPermissionRequested then
    begin
      FPermissionRequested := True;
      PermissionsService.RequestPermissions(
        [JStringToString(TJManifest_permission.JavaClass.READ_EXTERNAL_STORAGE)],
        procedure(const APermissions: TArray<string>; const AGrantResults: TArray<TPermissionStatus>)
        begin
          if (AGrantResults[0] = TPermissionStatus.Granted) then
          begin
            // permissão concedida
            APermissionGrantedProc;
          end
          else
          begin
            // permissão negada
            if TDialogService.MessageDialog(AMessage, TMsgDlgType.mtConfirmation, mbYesNo, 0) = mrYes then
            begin
              FPermissionRequested := False;
              RequestPermissions(APermissionGrantedProc, AMessage);
            end;
          end;
        end
      );
    end;
  end
  else
  begin
    // permissão já concedida
    APermissionGrantedProc;
  end;
end;

end.
